//*****************************************************************************
//*****************************************************************************
//  FILENAME: TenMicroSecTimer.h
//   Version: 2.6, Updated on 2013/5/19 at 10:44:39
//  Generated by PSoC Designer 5.4.2946
//
//  DESCRIPTION: Timer16 User Module C Language interface file
//-----------------------------------------------------------------------------
//  Copyright (c) Cypress Semiconductor 2013. All Rights Reserved.
//*****************************************************************************
//*****************************************************************************
#ifndef TenMicroSecTimer_INCLUDE
#define TenMicroSecTimer_INCLUDE

#include <m8c.h>

#pragma fastcall16 TenMicroSecTimer_EnableInt
#pragma fastcall16 TenMicroSecTimer_DisableInt
#pragma fastcall16 TenMicroSecTimer_Start
#pragma fastcall16 TenMicroSecTimer_Stop
#pragma fastcall16 TenMicroSecTimer_wReadTimer                // Read  DR0
#pragma fastcall16 TenMicroSecTimer_wReadTimerSaveCV          // Read  DR0      
#pragma fastcall16 TenMicroSecTimer_WritePeriod               // Write DR1
#pragma fastcall16 TenMicroSecTimer_wReadCompareValue         // Read  DR2
#pragma fastcall16 TenMicroSecTimer_WriteCompareValue         // Write DR2

// The following symbols are deprecated.
// They may be omitted in future releases
//
#pragma fastcall16 wTenMicroSecTimer_ReadCounter              // Read  DR0 "Obsolete"
#pragma fastcall16 wTenMicroSecTimer_CaptureCounter           // Read  DR0 "Obsolete"
#pragma fastcall16 wTenMicroSecTimer_ReadTimer                // Read  DR0 (Deprecated)
#pragma fastcall16 wTenMicroSecTimer_ReadTimerSaveCV          // Read  DR0 (Deprecated)
#pragma fastcall16 wTenMicroSecTimer_ReadCompareValue         // Read  DR2 (Deprecated)


//-------------------------------------------------
// Prototypes of the TenMicroSecTimer API.
//-------------------------------------------------

extern void TenMicroSecTimer_EnableInt(void);                           // Proxy 1
extern void TenMicroSecTimer_DisableInt(void);                          // Proxy 1
extern void TenMicroSecTimer_Start(void);                               // Proxy 1
extern void TenMicroSecTimer_Stop(void);                                // Proxy 1
extern WORD TenMicroSecTimer_wReadTimer(void);                          // Proxy 1
extern WORD TenMicroSecTimer_wReadTimerSaveCV(void);                    // Proxy 2
extern void TenMicroSecTimer_WritePeriod(WORD wPeriod);                 // Proxy 1
extern WORD TenMicroSecTimer_wReadCompareValue(void);                   // Proxy 1
extern void TenMicroSecTimer_WriteCompareValue(WORD wCompareValue);     // Proxy 1

// The following functions are deprecated.
// They may be omitted in future releases
//
extern WORD wTenMicroSecTimer_ReadCompareValue(void);       // Deprecated
extern WORD wTenMicroSecTimer_ReadTimerSaveCV(void);        // Deprecated
extern WORD wTenMicroSecTimer_ReadCounter(void);            // Obsolete
extern WORD wTenMicroSecTimer_ReadTimer(void);              // Deprecated
extern WORD wTenMicroSecTimer_CaptureCounter(void);         // Obsolete


//--------------------------------------------------
// Constants for TenMicroSecTimer API's.
//--------------------------------------------------

#define TenMicroSecTimer_CONTROL_REG_START_BIT ( 0x01 )
#define TenMicroSecTimer_INT_REG_ADDR          ( 0x0e1 )
#define TenMicroSecTimer_INT_MASK              ( 0x80 )


//--------------------------------------------------
// Constants for TenMicroSecTimer user defined values
//--------------------------------------------------

#define TenMicroSecTimer_PERIOD                ( 0x0 )
#define TenMicroSecTimer_COMPARE_VALUE         ( 0x0 )


//-------------------------------------------------
// Register Addresses for TenMicroSecTimer
//-------------------------------------------------

#pragma ioport  TenMicroSecTimer_COUNTER_LSB_REG:   0x038    //Count register LSB
BYTE            TenMicroSecTimer_COUNTER_LSB_REG;
#pragma ioport  TenMicroSecTimer_COUNTER_MSB_REG:   0x03c    //Count register MSB
BYTE            TenMicroSecTimer_COUNTER_MSB_REG;
#pragma ioport  TenMicroSecTimer_PERIOD_LSB_REG:    0x039     //Period register LSB
BYTE            TenMicroSecTimer_PERIOD_LSB_REG;
#pragma ioport  TenMicroSecTimer_PERIOD_MSB_REG:    0x03d     //Period register MSB
BYTE            TenMicroSecTimer_PERIOD_MSB_REG;
#pragma ioport  TenMicroSecTimer_COMPARE_LSB_REG:   0x03a    //Compare register LSB
BYTE            TenMicroSecTimer_COMPARE_LSB_REG;
#pragma ioport  TenMicroSecTimer_COMPARE_MSB_REG:   0x03e    //Compare register MSB
BYTE            TenMicroSecTimer_COMPARE_MSB_REG;
#pragma ioport  TenMicroSecTimer_CONTROL_LSB_REG:   0x03b    //Control register LSB
BYTE            TenMicroSecTimer_CONTROL_LSB_REG;
#pragma ioport  TenMicroSecTimer_CONTROL_MSB_REG:   0x03f    //Control register MSB
BYTE            TenMicroSecTimer_CONTROL_MSB_REG;
#pragma ioport  TenMicroSecTimer_FUNC_LSB_REG:  0x138      //Function register LSB
BYTE            TenMicroSecTimer_FUNC_LSB_REG;
#pragma ioport  TenMicroSecTimer_FUNC_MSB_REG:  0x13c      //Function register MSB
BYTE            TenMicroSecTimer_FUNC_MSB_REG;
#pragma ioport  TenMicroSecTimer_INPUT_LSB_REG: 0x139      //Input register LSB
BYTE            TenMicroSecTimer_INPUT_LSB_REG;
#pragma ioport  TenMicroSecTimer_INPUT_MSB_REG: 0x13d      //Input register MSB
BYTE            TenMicroSecTimer_INPUT_MSB_REG;
#pragma ioport  TenMicroSecTimer_OUTPUT_LSB_REG:    0x13a     //Output register LSB
BYTE            TenMicroSecTimer_OUTPUT_LSB_REG;
#pragma ioport  TenMicroSecTimer_OUTPUT_MSB_REG:    0x13e     //Output register MSB
BYTE            TenMicroSecTimer_OUTPUT_MSB_REG;
#pragma ioport  TenMicroSecTimer_INT_REG:       0x0e1      //Interrupt Mask Register
BYTE            TenMicroSecTimer_INT_REG;


//-------------------------------------------------
// TenMicroSecTimer Macro 'Functions'
//-------------------------------------------------

#define TenMicroSecTimer_Start_M \
   ( TenMicroSecTimer_CONTROL_LSB_REG |=  TenMicroSecTimer_CONTROL_REG_START_BIT )

#define TenMicroSecTimer_Stop_M  \
   ( TenMicroSecTimer_CONTROL_LSB_REG &= ~TenMicroSecTimer_CONTROL_REG_START_BIT )

#define TenMicroSecTimer_EnableInt_M   \
   M8C_EnableIntMask(  TenMicroSecTimer_INT_REG, TenMicroSecTimer_INT_MASK )

#define TenMicroSecTimer_DisableInt_M  \
   M8C_DisableIntMask( TenMicroSecTimer_INT_REG, TenMicroSecTimer_INT_MASK )

#endif
// end of file TenMicroSecTimer.h
