/******************************************************************************
*  Generated by PSoC Designer 5.4.3191
******************************************************************************/
#include <m8c.h>
// CHANNELA_IN address and mask defines
#pragma	ioport	CHANNELA_IN_Data_ADDR:	0x0
BYTE			CHANNELA_IN_Data_ADDR;
#pragma	ioport	CHANNELA_IN_DriveMode_0_ADDR:	0x100
BYTE			CHANNELA_IN_DriveMode_0_ADDR;
#pragma	ioport	CHANNELA_IN_DriveMode_1_ADDR:	0x101
BYTE			CHANNELA_IN_DriveMode_1_ADDR;
#pragma	ioport	CHANNELA_IN_DriveMode_2_ADDR:	0x3
BYTE			CHANNELA_IN_DriveMode_2_ADDR;
#pragma	ioport	CHANNELA_IN_GlobalSelect_ADDR:	0x2
BYTE			CHANNELA_IN_GlobalSelect_ADDR;
#pragma	ioport	CHANNELA_IN_IntCtrl_0_ADDR:	0x102
BYTE			CHANNELA_IN_IntCtrl_0_ADDR;
#pragma	ioport	CHANNELA_IN_IntCtrl_1_ADDR:	0x103
BYTE			CHANNELA_IN_IntCtrl_1_ADDR;
#pragma	ioport	CHANNELA_IN_IntEn_ADDR:	0x1
BYTE			CHANNELA_IN_IntEn_ADDR;
#define CHANNELA_IN_MASK 0x2
// PGA_OUT address and mask defines
#pragma	ioport	PGA_OUT_Data_ADDR:	0x0
BYTE			PGA_OUT_Data_ADDR;
#pragma	ioport	PGA_OUT_DriveMode_0_ADDR:	0x100
BYTE			PGA_OUT_DriveMode_0_ADDR;
#pragma	ioport	PGA_OUT_DriveMode_1_ADDR:	0x101
BYTE			PGA_OUT_DriveMode_1_ADDR;
#pragma	ioport	PGA_OUT_DriveMode_2_ADDR:	0x3
BYTE			PGA_OUT_DriveMode_2_ADDR;
#pragma	ioport	PGA_OUT_GlobalSelect_ADDR:	0x2
BYTE			PGA_OUT_GlobalSelect_ADDR;
#pragma	ioport	PGA_OUT_IntCtrl_0_ADDR:	0x102
BYTE			PGA_OUT_IntCtrl_0_ADDR;
#pragma	ioport	PGA_OUT_IntCtrl_1_ADDR:	0x103
BYTE			PGA_OUT_IntCtrl_1_ADDR;
#pragma	ioport	PGA_OUT_IntEn_ADDR:	0x1
BYTE			PGA_OUT_IntEn_ADDR;
#define PGA_OUT_MASK 0x8
// DAC8B_OUT address and mask defines
#pragma	ioport	DAC8B_OUT_Data_ADDR:	0x0
BYTE			DAC8B_OUT_Data_ADDR;
#pragma	ioport	DAC8B_OUT_DriveMode_0_ADDR:	0x100
BYTE			DAC8B_OUT_DriveMode_0_ADDR;
#pragma	ioport	DAC8B_OUT_DriveMode_1_ADDR:	0x101
BYTE			DAC8B_OUT_DriveMode_1_ADDR;
#pragma	ioport	DAC8B_OUT_DriveMode_2_ADDR:	0x3
BYTE			DAC8B_OUT_DriveMode_2_ADDR;
#pragma	ioport	DAC8B_OUT_GlobalSelect_ADDR:	0x2
BYTE			DAC8B_OUT_GlobalSelect_ADDR;
#pragma	ioport	DAC8B_OUT_IntCtrl_0_ADDR:	0x102
BYTE			DAC8B_OUT_IntCtrl_0_ADDR;
#pragma	ioport	DAC8B_OUT_IntCtrl_1_ADDR:	0x103
BYTE			DAC8B_OUT_IntCtrl_1_ADDR;
#pragma	ioport	DAC8B_OUT_IntEn_ADDR:	0x1
BYTE			DAC8B_OUT_IntEn_ADDR;
#define DAC8B_OUT_MASK 0x10
// DAC8A_OUT address and mask defines
#pragma	ioport	DAC8A_OUT_Data_ADDR:	0x0
BYTE			DAC8A_OUT_Data_ADDR;
#pragma	ioport	DAC8A_OUT_DriveMode_0_ADDR:	0x100
BYTE			DAC8A_OUT_DriveMode_0_ADDR;
#pragma	ioport	DAC8A_OUT_DriveMode_1_ADDR:	0x101
BYTE			DAC8A_OUT_DriveMode_1_ADDR;
#pragma	ioport	DAC8A_OUT_DriveMode_2_ADDR:	0x3
BYTE			DAC8A_OUT_DriveMode_2_ADDR;
#pragma	ioport	DAC8A_OUT_GlobalSelect_ADDR:	0x2
BYTE			DAC8A_OUT_GlobalSelect_ADDR;
#pragma	ioport	DAC8A_OUT_IntCtrl_0_ADDR:	0x102
BYTE			DAC8A_OUT_IntCtrl_0_ADDR;
#pragma	ioport	DAC8A_OUT_IntCtrl_1_ADDR:	0x103
BYTE			DAC8A_OUT_IntCtrl_1_ADDR;
#pragma	ioport	DAC8A_OUT_IntEn_ADDR:	0x1
BYTE			DAC8A_OUT_IntEn_ADDR;
#define DAC8A_OUT_MASK 0x20
// CHANNELB_IN address and mask defines
#pragma	ioport	CHANNELB_IN_Data_ADDR:	0x0
BYTE			CHANNELB_IN_Data_ADDR;
#pragma	ioport	CHANNELB_IN_DriveMode_0_ADDR:	0x100
BYTE			CHANNELB_IN_DriveMode_0_ADDR;
#pragma	ioport	CHANNELB_IN_DriveMode_1_ADDR:	0x101
BYTE			CHANNELB_IN_DriveMode_1_ADDR;
#pragma	ioport	CHANNELB_IN_DriveMode_2_ADDR:	0x3
BYTE			CHANNELB_IN_DriveMode_2_ADDR;
#pragma	ioport	CHANNELB_IN_GlobalSelect_ADDR:	0x2
BYTE			CHANNELB_IN_GlobalSelect_ADDR;
#pragma	ioport	CHANNELB_IN_IntCtrl_0_ADDR:	0x102
BYTE			CHANNELB_IN_IntCtrl_0_ADDR;
#pragma	ioport	CHANNELB_IN_IntCtrl_1_ADDR:	0x103
BYTE			CHANNELB_IN_IntCtrl_1_ADDR;
#pragma	ioport	CHANNELB_IN_IntEn_ADDR:	0x1
BYTE			CHANNELB_IN_IntEn_ADDR;
#define CHANNELB_IN_MASK 0x80
// ADCPWM_OUT address and mask defines
#pragma	ioport	ADCPWM_OUT_Data_ADDR:	0x4
BYTE			ADCPWM_OUT_Data_ADDR;
#pragma	ioport	ADCPWM_OUT_DriveMode_0_ADDR:	0x104
BYTE			ADCPWM_OUT_DriveMode_0_ADDR;
#pragma	ioport	ADCPWM_OUT_DriveMode_1_ADDR:	0x105
BYTE			ADCPWM_OUT_DriveMode_1_ADDR;
#pragma	ioport	ADCPWM_OUT_DriveMode_2_ADDR:	0x7
BYTE			ADCPWM_OUT_DriveMode_2_ADDR;
#pragma	ioport	ADCPWM_OUT_GlobalSelect_ADDR:	0x6
BYTE			ADCPWM_OUT_GlobalSelect_ADDR;
#pragma	ioport	ADCPWM_OUT_IntCtrl_0_ADDR:	0x106
BYTE			ADCPWM_OUT_IntCtrl_0_ADDR;
#pragma	ioport	ADCPWM_OUT_IntCtrl_1_ADDR:	0x107
BYTE			ADCPWM_OUT_IntCtrl_1_ADDR;
#pragma	ioport	ADCPWM_OUT_IntEn_ADDR:	0x5
BYTE			ADCPWM_OUT_IntEn_ADDR;
#define ADCPWM_OUT_MASK 0x1
// TRIGGER address and mask defines
#pragma	ioport	TRIGGER_Data_ADDR:	0x4
BYTE			TRIGGER_Data_ADDR;
#pragma	ioport	TRIGGER_DriveMode_0_ADDR:	0x104
BYTE			TRIGGER_DriveMode_0_ADDR;
#pragma	ioport	TRIGGER_DriveMode_1_ADDR:	0x105
BYTE			TRIGGER_DriveMode_1_ADDR;
#pragma	ioport	TRIGGER_DriveMode_2_ADDR:	0x7
BYTE			TRIGGER_DriveMode_2_ADDR;
#pragma	ioport	TRIGGER_GlobalSelect_ADDR:	0x6
BYTE			TRIGGER_GlobalSelect_ADDR;
#pragma	ioport	TRIGGER_IntCtrl_0_ADDR:	0x106
BYTE			TRIGGER_IntCtrl_0_ADDR;
#pragma	ioport	TRIGGER_IntCtrl_1_ADDR:	0x107
BYTE			TRIGGER_IntCtrl_1_ADDR;
#pragma	ioport	TRIGGER_IntEn_ADDR:	0x5
BYTE			TRIGGER_IntEn_ADDR;
#define TRIGGER_MASK 0x2
// nCS address and mask defines
#pragma	ioport	nCS_Data_ADDR:	0x4
BYTE			nCS_Data_ADDR;
#pragma	ioport	nCS_DriveMode_0_ADDR:	0x104
BYTE			nCS_DriveMode_0_ADDR;
#pragma	ioport	nCS_DriveMode_1_ADDR:	0x105
BYTE			nCS_DriveMode_1_ADDR;
#pragma	ioport	nCS_DriveMode_2_ADDR:	0x7
BYTE			nCS_DriveMode_2_ADDR;
#pragma	ioport	nCS_GlobalSelect_ADDR:	0x6
BYTE			nCS_GlobalSelect_ADDR;
#pragma	ioport	nCS_IntCtrl_0_ADDR:	0x106
BYTE			nCS_IntCtrl_0_ADDR;
#pragma	ioport	nCS_IntCtrl_1_ADDR:	0x107
BYTE			nCS_IntCtrl_1_ADDR;
#pragma	ioport	nCS_IntEn_ADDR:	0x5
BYTE			nCS_IntEn_ADDR;
#define nCS_MASK 0x4
// SCLK address and mask defines
#pragma	ioport	SCLK_Data_ADDR:	0x4
BYTE			SCLK_Data_ADDR;
#pragma	ioport	SCLK_DriveMode_0_ADDR:	0x104
BYTE			SCLK_DriveMode_0_ADDR;
#pragma	ioport	SCLK_DriveMode_1_ADDR:	0x105
BYTE			SCLK_DriveMode_1_ADDR;
#pragma	ioport	SCLK_DriveMode_2_ADDR:	0x7
BYTE			SCLK_DriveMode_2_ADDR;
#pragma	ioport	SCLK_GlobalSelect_ADDR:	0x6
BYTE			SCLK_GlobalSelect_ADDR;
#pragma	ioport	SCLK_IntCtrl_0_ADDR:	0x106
BYTE			SCLK_IntCtrl_0_ADDR;
#pragma	ioport	SCLK_IntCtrl_1_ADDR:	0x107
BYTE			SCLK_IntCtrl_1_ADDR;
#pragma	ioport	SCLK_IntEn_ADDR:	0x5
BYTE			SCLK_IntEn_ADDR;
#define SCLK_MASK 0x8
// MOSI address and mask defines
#pragma	ioport	MOSI_Data_ADDR:	0x4
BYTE			MOSI_Data_ADDR;
#pragma	ioport	MOSI_DriveMode_0_ADDR:	0x104
BYTE			MOSI_DriveMode_0_ADDR;
#pragma	ioport	MOSI_DriveMode_1_ADDR:	0x105
BYTE			MOSI_DriveMode_1_ADDR;
#pragma	ioport	MOSI_DriveMode_2_ADDR:	0x7
BYTE			MOSI_DriveMode_2_ADDR;
#pragma	ioport	MOSI_GlobalSelect_ADDR:	0x6
BYTE			MOSI_GlobalSelect_ADDR;
#pragma	ioport	MOSI_IntCtrl_0_ADDR:	0x106
BYTE			MOSI_IntCtrl_0_ADDR;
#pragma	ioport	MOSI_IntCtrl_1_ADDR:	0x107
BYTE			MOSI_IntCtrl_1_ADDR;
#pragma	ioport	MOSI_IntEn_ADDR:	0x5
BYTE			MOSI_IntEn_ADDR;
#define MOSI_MASK 0x10
// MISO address and mask defines
#pragma	ioport	MISO_Data_ADDR:	0x4
BYTE			MISO_Data_ADDR;
#pragma	ioport	MISO_DriveMode_0_ADDR:	0x104
BYTE			MISO_DriveMode_0_ADDR;
#pragma	ioport	MISO_DriveMode_1_ADDR:	0x105
BYTE			MISO_DriveMode_1_ADDR;
#pragma	ioport	MISO_DriveMode_2_ADDR:	0x7
BYTE			MISO_DriveMode_2_ADDR;
#pragma	ioport	MISO_GlobalSelect_ADDR:	0x6
BYTE			MISO_GlobalSelect_ADDR;
#pragma	ioport	MISO_IntCtrl_0_ADDR:	0x106
BYTE			MISO_IntCtrl_0_ADDR;
#pragma	ioport	MISO_IntCtrl_1_ADDR:	0x107
BYTE			MISO_IntCtrl_1_ADDR;
#pragma	ioport	MISO_IntEn_ADDR:	0x5
BYTE			MISO_IntEn_ADDR;
#define MISO_MASK 0x20
// RX_IN address and mask defines
#pragma	ioport	RX_IN_Data_ADDR:	0x4
BYTE			RX_IN_Data_ADDR;
#pragma	ioport	RX_IN_DriveMode_0_ADDR:	0x104
BYTE			RX_IN_DriveMode_0_ADDR;
#pragma	ioport	RX_IN_DriveMode_1_ADDR:	0x105
BYTE			RX_IN_DriveMode_1_ADDR;
#pragma	ioport	RX_IN_DriveMode_2_ADDR:	0x7
BYTE			RX_IN_DriveMode_2_ADDR;
#pragma	ioport	RX_IN_GlobalSelect_ADDR:	0x6
BYTE			RX_IN_GlobalSelect_ADDR;
#pragma	ioport	RX_IN_IntCtrl_0_ADDR:	0x106
BYTE			RX_IN_IntCtrl_0_ADDR;
#pragma	ioport	RX_IN_IntCtrl_1_ADDR:	0x107
BYTE			RX_IN_IntCtrl_1_ADDR;
#pragma	ioport	RX_IN_IntEn_ADDR:	0x5
BYTE			RX_IN_IntEn_ADDR;
#define RX_IN_MASK 0x40
// DACUPDATE_OUT address and mask defines
#pragma	ioport	DACUPDATE_OUT_Data_ADDR:	0x4
BYTE			DACUPDATE_OUT_Data_ADDR;
#pragma	ioport	DACUPDATE_OUT_DriveMode_0_ADDR:	0x104
BYTE			DACUPDATE_OUT_DriveMode_0_ADDR;
#pragma	ioport	DACUPDATE_OUT_DriveMode_1_ADDR:	0x105
BYTE			DACUPDATE_OUT_DriveMode_1_ADDR;
#pragma	ioport	DACUPDATE_OUT_DriveMode_2_ADDR:	0x7
BYTE			DACUPDATE_OUT_DriveMode_2_ADDR;
#pragma	ioport	DACUPDATE_OUT_GlobalSelect_ADDR:	0x6
BYTE			DACUPDATE_OUT_GlobalSelect_ADDR;
#pragma	ioport	DACUPDATE_OUT_IntCtrl_0_ADDR:	0x106
BYTE			DACUPDATE_OUT_IntCtrl_0_ADDR;
#pragma	ioport	DACUPDATE_OUT_IntCtrl_1_ADDR:	0x107
BYTE			DACUPDATE_OUT_IntCtrl_1_ADDR;
#pragma	ioport	DACUPDATE_OUT_IntEn_ADDR:	0x5
BYTE			DACUPDATE_OUT_IntEn_ADDR;
#define DACUPDATE_OUT_MASK 0x80
// LCDD4 address and mask defines
#pragma	ioport	LCDD4_Data_ADDR:	0x8
BYTE			LCDD4_Data_ADDR;
#pragma	ioport	LCDD4_DriveMode_0_ADDR:	0x108
BYTE			LCDD4_DriveMode_0_ADDR;
#pragma	ioport	LCDD4_DriveMode_1_ADDR:	0x109
BYTE			LCDD4_DriveMode_1_ADDR;
#pragma	ioport	LCDD4_DriveMode_2_ADDR:	0xb
BYTE			LCDD4_DriveMode_2_ADDR;
#pragma	ioport	LCDD4_GlobalSelect_ADDR:	0xa
BYTE			LCDD4_GlobalSelect_ADDR;
#pragma	ioport	LCDD4_IntCtrl_0_ADDR:	0x10a
BYTE			LCDD4_IntCtrl_0_ADDR;
#pragma	ioport	LCDD4_IntCtrl_1_ADDR:	0x10b
BYTE			LCDD4_IntCtrl_1_ADDR;
#pragma	ioport	LCDD4_IntEn_ADDR:	0x9
BYTE			LCDD4_IntEn_ADDR;
#define LCDD4_MASK 0x1
// LCDD4 Shadow defines
//   LCDD4_DataShadow define
extern BYTE Port_2_Data_SHADE;
#define LCDD4_DataShadow (*(unsigned char*)&Port_2_Data_SHADE)
//   LCDD4_DriveMode_0Shadow define
extern BYTE Port_2_DriveMode_0_SHADE;
#define LCDD4_DriveMode_0Shadow (*(unsigned char*)&Port_2_DriveMode_0_SHADE)
//   LCDD4_DriveMode_1Shadow define
extern BYTE Port_2_DriveMode_1_SHADE;
#define LCDD4_DriveMode_1Shadow (*(unsigned char*)&Port_2_DriveMode_1_SHADE)
// LCDD5 address and mask defines
#pragma	ioport	LCDD5_Data_ADDR:	0x8
BYTE			LCDD5_Data_ADDR;
#pragma	ioport	LCDD5_DriveMode_0_ADDR:	0x108
BYTE			LCDD5_DriveMode_0_ADDR;
#pragma	ioport	LCDD5_DriveMode_1_ADDR:	0x109
BYTE			LCDD5_DriveMode_1_ADDR;
#pragma	ioport	LCDD5_DriveMode_2_ADDR:	0xb
BYTE			LCDD5_DriveMode_2_ADDR;
#pragma	ioport	LCDD5_GlobalSelect_ADDR:	0xa
BYTE			LCDD5_GlobalSelect_ADDR;
#pragma	ioport	LCDD5_IntCtrl_0_ADDR:	0x10a
BYTE			LCDD5_IntCtrl_0_ADDR;
#pragma	ioport	LCDD5_IntCtrl_1_ADDR:	0x10b
BYTE			LCDD5_IntCtrl_1_ADDR;
#pragma	ioport	LCDD5_IntEn_ADDR:	0x9
BYTE			LCDD5_IntEn_ADDR;
#define LCDD5_MASK 0x2
// LCDD5 Shadow defines
//   LCDD5_DataShadow define
extern BYTE Port_2_Data_SHADE;
#define LCDD5_DataShadow (*(unsigned char*)&Port_2_Data_SHADE)
//   LCDD5_DriveMode_0Shadow define
extern BYTE Port_2_DriveMode_0_SHADE;
#define LCDD5_DriveMode_0Shadow (*(unsigned char*)&Port_2_DriveMode_0_SHADE)
//   LCDD5_DriveMode_1Shadow define
extern BYTE Port_2_DriveMode_1_SHADE;
#define LCDD5_DriveMode_1Shadow (*(unsigned char*)&Port_2_DriveMode_1_SHADE)
// LCDD6 address and mask defines
#pragma	ioport	LCDD6_Data_ADDR:	0x8
BYTE			LCDD6_Data_ADDR;
#pragma	ioport	LCDD6_DriveMode_0_ADDR:	0x108
BYTE			LCDD6_DriveMode_0_ADDR;
#pragma	ioport	LCDD6_DriveMode_1_ADDR:	0x109
BYTE			LCDD6_DriveMode_1_ADDR;
#pragma	ioport	LCDD6_DriveMode_2_ADDR:	0xb
BYTE			LCDD6_DriveMode_2_ADDR;
#pragma	ioport	LCDD6_GlobalSelect_ADDR:	0xa
BYTE			LCDD6_GlobalSelect_ADDR;
#pragma	ioport	LCDD6_IntCtrl_0_ADDR:	0x10a
BYTE			LCDD6_IntCtrl_0_ADDR;
#pragma	ioport	LCDD6_IntCtrl_1_ADDR:	0x10b
BYTE			LCDD6_IntCtrl_1_ADDR;
#pragma	ioport	LCDD6_IntEn_ADDR:	0x9
BYTE			LCDD6_IntEn_ADDR;
#define LCDD6_MASK 0x4
// LCDD6 Shadow defines
//   LCDD6_DataShadow define
extern BYTE Port_2_Data_SHADE;
#define LCDD6_DataShadow (*(unsigned char*)&Port_2_Data_SHADE)
//   LCDD6_DriveMode_0Shadow define
extern BYTE Port_2_DriveMode_0_SHADE;
#define LCDD6_DriveMode_0Shadow (*(unsigned char*)&Port_2_DriveMode_0_SHADE)
//   LCDD6_DriveMode_1Shadow define
extern BYTE Port_2_DriveMode_1_SHADE;
#define LCDD6_DriveMode_1Shadow (*(unsigned char*)&Port_2_DriveMode_1_SHADE)
// LCDD7 address and mask defines
#pragma	ioport	LCDD7_Data_ADDR:	0x8
BYTE			LCDD7_Data_ADDR;
#pragma	ioport	LCDD7_DriveMode_0_ADDR:	0x108
BYTE			LCDD7_DriveMode_0_ADDR;
#pragma	ioport	LCDD7_DriveMode_1_ADDR:	0x109
BYTE			LCDD7_DriveMode_1_ADDR;
#pragma	ioport	LCDD7_DriveMode_2_ADDR:	0xb
BYTE			LCDD7_DriveMode_2_ADDR;
#pragma	ioport	LCDD7_GlobalSelect_ADDR:	0xa
BYTE			LCDD7_GlobalSelect_ADDR;
#pragma	ioport	LCDD7_IntCtrl_0_ADDR:	0x10a
BYTE			LCDD7_IntCtrl_0_ADDR;
#pragma	ioport	LCDD7_IntCtrl_1_ADDR:	0x10b
BYTE			LCDD7_IntCtrl_1_ADDR;
#pragma	ioport	LCDD7_IntEn_ADDR:	0x9
BYTE			LCDD7_IntEn_ADDR;
#define LCDD7_MASK 0x8
// LCDD7 Shadow defines
//   LCDD7_DataShadow define
extern BYTE Port_2_Data_SHADE;
#define LCDD7_DataShadow (*(unsigned char*)&Port_2_Data_SHADE)
//   LCDD7_DriveMode_0Shadow define
extern BYTE Port_2_DriveMode_0_SHADE;
#define LCDD7_DriveMode_0Shadow (*(unsigned char*)&Port_2_DriveMode_0_SHADE)
//   LCDD7_DriveMode_1Shadow define
extern BYTE Port_2_DriveMode_1_SHADE;
#define LCDD7_DriveMode_1Shadow (*(unsigned char*)&Port_2_DriveMode_1_SHADE)
// LCDE address and mask defines
#pragma	ioport	LCDE_Data_ADDR:	0x8
BYTE			LCDE_Data_ADDR;
#pragma	ioport	LCDE_DriveMode_0_ADDR:	0x108
BYTE			LCDE_DriveMode_0_ADDR;
#pragma	ioport	LCDE_DriveMode_1_ADDR:	0x109
BYTE			LCDE_DriveMode_1_ADDR;
#pragma	ioport	LCDE_DriveMode_2_ADDR:	0xb
BYTE			LCDE_DriveMode_2_ADDR;
#pragma	ioport	LCDE_GlobalSelect_ADDR:	0xa
BYTE			LCDE_GlobalSelect_ADDR;
#pragma	ioport	LCDE_IntCtrl_0_ADDR:	0x10a
BYTE			LCDE_IntCtrl_0_ADDR;
#pragma	ioport	LCDE_IntCtrl_1_ADDR:	0x10b
BYTE			LCDE_IntCtrl_1_ADDR;
#pragma	ioport	LCDE_IntEn_ADDR:	0x9
BYTE			LCDE_IntEn_ADDR;
#define LCDE_MASK 0x10
// LCDE Shadow defines
//   LCDE_DataShadow define
extern BYTE Port_2_Data_SHADE;
#define LCDE_DataShadow (*(unsigned char*)&Port_2_Data_SHADE)
//   LCDE_DriveMode_0Shadow define
extern BYTE Port_2_DriveMode_0_SHADE;
#define LCDE_DriveMode_0Shadow (*(unsigned char*)&Port_2_DriveMode_0_SHADE)
//   LCDE_DriveMode_1Shadow define
extern BYTE Port_2_DriveMode_1_SHADE;
#define LCDE_DriveMode_1Shadow (*(unsigned char*)&Port_2_DriveMode_1_SHADE)
// LCDRS address and mask defines
#pragma	ioport	LCDRS_Data_ADDR:	0x8
BYTE			LCDRS_Data_ADDR;
#pragma	ioport	LCDRS_DriveMode_0_ADDR:	0x108
BYTE			LCDRS_DriveMode_0_ADDR;
#pragma	ioport	LCDRS_DriveMode_1_ADDR:	0x109
BYTE			LCDRS_DriveMode_1_ADDR;
#pragma	ioport	LCDRS_DriveMode_2_ADDR:	0xb
BYTE			LCDRS_DriveMode_2_ADDR;
#pragma	ioport	LCDRS_GlobalSelect_ADDR:	0xa
BYTE			LCDRS_GlobalSelect_ADDR;
#pragma	ioport	LCDRS_IntCtrl_0_ADDR:	0x10a
BYTE			LCDRS_IntCtrl_0_ADDR;
#pragma	ioport	LCDRS_IntCtrl_1_ADDR:	0x10b
BYTE			LCDRS_IntCtrl_1_ADDR;
#pragma	ioport	LCDRS_IntEn_ADDR:	0x9
BYTE			LCDRS_IntEn_ADDR;
#define LCDRS_MASK 0x20
// LCDRS Shadow defines
//   LCDRS_DataShadow define
extern BYTE Port_2_Data_SHADE;
#define LCDRS_DataShadow (*(unsigned char*)&Port_2_Data_SHADE)
//   LCDRS_DriveMode_0Shadow define
extern BYTE Port_2_DriveMode_0_SHADE;
#define LCDRS_DriveMode_0Shadow (*(unsigned char*)&Port_2_DriveMode_0_SHADE)
//   LCDRS_DriveMode_1Shadow define
extern BYTE Port_2_DriveMode_1_SHADE;
#define LCDRS_DriveMode_1Shadow (*(unsigned char*)&Port_2_DriveMode_1_SHADE)
// LCDRW address and mask defines
#pragma	ioport	LCDRW_Data_ADDR:	0x8
BYTE			LCDRW_Data_ADDR;
#pragma	ioport	LCDRW_DriveMode_0_ADDR:	0x108
BYTE			LCDRW_DriveMode_0_ADDR;
#pragma	ioport	LCDRW_DriveMode_1_ADDR:	0x109
BYTE			LCDRW_DriveMode_1_ADDR;
#pragma	ioport	LCDRW_DriveMode_2_ADDR:	0xb
BYTE			LCDRW_DriveMode_2_ADDR;
#pragma	ioport	LCDRW_GlobalSelect_ADDR:	0xa
BYTE			LCDRW_GlobalSelect_ADDR;
#pragma	ioport	LCDRW_IntCtrl_0_ADDR:	0x10a
BYTE			LCDRW_IntCtrl_0_ADDR;
#pragma	ioport	LCDRW_IntCtrl_1_ADDR:	0x10b
BYTE			LCDRW_IntCtrl_1_ADDR;
#pragma	ioport	LCDRW_IntEn_ADDR:	0x9
BYTE			LCDRW_IntEn_ADDR;
#define LCDRW_MASK 0x40
// LCDRW Shadow defines
//   LCDRW_DataShadow define
extern BYTE Port_2_Data_SHADE;
#define LCDRW_DataShadow (*(unsigned char*)&Port_2_Data_SHADE)
//   LCDRW_DriveMode_0Shadow define
extern BYTE Port_2_DriveMode_0_SHADE;
#define LCDRW_DriveMode_0Shadow (*(unsigned char*)&Port_2_DriveMode_0_SHADE)
//   LCDRW_DriveMode_1Shadow define
extern BYTE Port_2_DriveMode_1_SHADE;
#define LCDRW_DriveMode_1Shadow (*(unsigned char*)&Port_2_DriveMode_1_SHADE)
// TX_OUT address and mask defines
#pragma	ioport	TX_OUT_Data_ADDR:	0x8
BYTE			TX_OUT_Data_ADDR;
#pragma	ioport	TX_OUT_DriveMode_0_ADDR:	0x108
BYTE			TX_OUT_DriveMode_0_ADDR;
#pragma	ioport	TX_OUT_DriveMode_1_ADDR:	0x109
BYTE			TX_OUT_DriveMode_1_ADDR;
#pragma	ioport	TX_OUT_DriveMode_2_ADDR:	0xb
BYTE			TX_OUT_DriveMode_2_ADDR;
#pragma	ioport	TX_OUT_GlobalSelect_ADDR:	0xa
BYTE			TX_OUT_GlobalSelect_ADDR;
#pragma	ioport	TX_OUT_IntCtrl_0_ADDR:	0x10a
BYTE			TX_OUT_IntCtrl_0_ADDR;
#pragma	ioport	TX_OUT_IntCtrl_1_ADDR:	0x10b
BYTE			TX_OUT_IntCtrl_1_ADDR;
#pragma	ioport	TX_OUT_IntEn_ADDR:	0x9
BYTE			TX_OUT_IntEn_ADDR;
#define TX_OUT_MASK 0x80
// TX_OUT Shadow defines
//   TX_OUT_DataShadow define
extern BYTE Port_2_Data_SHADE;
#define TX_OUT_DataShadow (*(unsigned char*)&Port_2_Data_SHADE)
//   TX_OUT_DriveMode_0Shadow define
extern BYTE Port_2_DriveMode_0_SHADE;
#define TX_OUT_DriveMode_0Shadow (*(unsigned char*)&Port_2_DriveMode_0_SHADE)
//   TX_OUT_DriveMode_1Shadow define
extern BYTE Port_2_DriveMode_1_SHADE;
#define TX_OUT_DriveMode_1Shadow (*(unsigned char*)&Port_2_DriveMode_1_SHADE)
